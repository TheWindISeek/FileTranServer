<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.api.dao.FilesMapper">
  <resultMap id="BaseResultMap" type="com.example.api.pojo.Files">
    <id column="File_Id" jdbcType="INTEGER" property="fileId" />
    <result column="File_Type" jdbcType="INTEGER" property="fileType" />
    <result column="File_Name" jdbcType="VARCHAR" property="fileName" />
    <result column="File_Creator" jdbcType="INTEGER" property="fileCreator" />
    <result column="File_Update" jdbcType="TIMESTAMP" property="fileUpdate" />
    <result column="File_Download_Count" jdbcType="INTEGER" property="fileDownloadCount" />
    <result column="File_Reference_Count" jdbcType="INTEGER" property="fileReferenceCount" />
    <result column="File_Size" jdbcType="INTEGER" property="fileSize" />
    <result column="File_Level" jdbcType="INTEGER" property="fileLevel" />
    <result column="File_Icon" jdbcType="INTEGER" property="fileIcon" />
    <result column="File_Icon_Custom" jdbcType="INTEGER" property="fileIconCustom" />
    <result column="File_Comments" jdbcType="INTEGER" property="fileComments" />
    <result column="File_Data" jdbcType="INTEGER" property="fileData" />
  </resultMap>
  <sql id="Base_Column_List">
    File_Id, File_Type, File_Name, File_Creator, File_Update, File_Download_Count, File_Reference_Count, 
    File_Size, File_Level, File_Icon, File_Icon_Custom, File_Comments, File_Data
  </sql>
  <!--以下是新增的查询-->
  <!--根据名称查询文件 返回一个list-->
  <select id="selectByFileName" parameterType="java.lang.String" resultType="com.example.api.pojo.Files">
	select
	<include refid="Base_Column_List" />
	from Files
	where File_Name like %#{keyword,jdbcType=VARCHAR}%
  </select>
  <!--查看所有可见文件,文件类型1和2是不可见的,另外需要提供一个查找位置 输入参数为起始位置和每页长度 返回一个list-->
  <select id="selectAnyVisibleFiles" parameterType="java.lang.Integer" resultType="com.example.api.pojo.Files">
	select
	<include refid="Base_Column_List" />
	from Files
	where (File_Type=3)or(File_Type=4)
	limit #{index,jdbcType=INTEGER},#{pageLength,jdbcType=INTEGER}
  </select>
  <!--查询可见文件的总数-->
  <select id="selectVisibleFileCount" resultType="java.lang.Integer">
	select count(*) from Files
	where (File_Type=3)or(File_Type=4)
  </select>
  <!--以下是原有自动生成的查询-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Files
    where File_Id = #{fileId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Files
    where File_Id = #{fileId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.api.pojo.Files">
    insert into Files (File_Id, File_Type, File_Name, 
      File_Creator, File_Update, File_Download_Count, 
      File_Reference_Count, File_Size, File_Level, 
      File_Icon, File_Icon_Custom, File_Comments, 
      File_Data)
    values (#{fileId,jdbcType=INTEGER}, #{fileType,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, 
      #{fileCreator,jdbcType=INTEGER}, #{fileUpdate,jdbcType=TIMESTAMP}, #{fileDownloadCount,jdbcType=INTEGER}, 
      #{fileReferenceCount,jdbcType=INTEGER}, #{fileSize,jdbcType=INTEGER}, #{fileLevel,jdbcType=INTEGER}, 
      #{fileIcon,jdbcType=INTEGER}, #{fileIconCustom,jdbcType=INTEGER}, #{fileComments,jdbcType=INTEGER}, 
      #{fileData,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.api.pojo.Files">
    insert into Files
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        File_Id,
      </if>
      <if test="fileType != null">
        File_Type,
      </if>
      <if test="fileName != null">
        File_Name,
      </if>
      <if test="fileCreator != null">
        File_Creator,
      </if>
      <if test="fileUpdate != null">
        File_Update,
      </if>
      <if test="fileDownloadCount != null">
        File_Download_Count,
      </if>
      <if test="fileReferenceCount != null">
        File_Reference_Count,
      </if>
      <if test="fileSize != null">
        File_Size,
      </if>
      <if test="fileLevel != null">
        File_Level,
      </if>
      <if test="fileIcon != null">
        File_Icon,
      </if>
      <if test="fileIconCustom != null">
        File_Icon_Custom,
      </if>
      <if test="fileComments != null">
        File_Comments,
      </if>
      <if test="fileData != null">
        File_Data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileCreator != null">
        #{fileCreator,jdbcType=INTEGER},
      </if>
      <if test="fileUpdate != null">
        #{fileUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileDownloadCount != null">
        #{fileDownloadCount,jdbcType=INTEGER},
      </if>
      <if test="fileReferenceCount != null">
        #{fileReferenceCount,jdbcType=INTEGER},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=INTEGER},
      </if>
      <if test="fileLevel != null">
        #{fileLevel,jdbcType=INTEGER},
      </if>
      <if test="fileIcon != null">
        #{fileIcon,jdbcType=INTEGER},
      </if>
      <if test="fileIconCustom != null">
        #{fileIconCustom,jdbcType=INTEGER},
      </if>
      <if test="fileComments != null">
        #{fileComments,jdbcType=INTEGER},
      </if>
      <if test="fileData != null">
        #{fileData,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.api.pojo.Files">
    update Files
    <set>
      <if test="fileType != null">
        File_Type = #{fileType,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        File_Name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileCreator != null">
        File_Creator = #{fileCreator,jdbcType=INTEGER},
      </if>
      <if test="fileUpdate != null">
        File_Update = #{fileUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileDownloadCount != null">
        File_Download_Count = #{fileDownloadCount,jdbcType=INTEGER},
      </if>
      <if test="fileReferenceCount != null">
        File_Reference_Count = #{fileReferenceCount,jdbcType=INTEGER},
      </if>
      <if test="fileSize != null">
        File_Size = #{fileSize,jdbcType=INTEGER},
      </if>
      <if test="fileLevel != null">
        File_Level = #{fileLevel,jdbcType=INTEGER},
      </if>
      <if test="fileIcon != null">
        File_Icon = #{fileIcon,jdbcType=INTEGER},
      </if>
      <if test="fileIconCustom != null">
        File_Icon_Custom = #{fileIconCustom,jdbcType=INTEGER},
      </if>
      <if test="fileComments != null">
        File_Comments = #{fileComments,jdbcType=INTEGER},
      </if>
      <if test="fileData != null">
        File_Data = #{fileData,jdbcType=INTEGER},
      </if>
    </set>
    where File_Id = #{fileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.api.pojo.Files">
    update Files
    set File_Type = #{fileType,jdbcType=INTEGER},
      File_Name = #{fileName,jdbcType=VARCHAR},
      File_Creator = #{fileCreator,jdbcType=INTEGER},
      File_Update = #{fileUpdate,jdbcType=TIMESTAMP},
      File_Download_Count = #{fileDownloadCount,jdbcType=INTEGER},
      File_Reference_Count = #{fileReferenceCount,jdbcType=INTEGER},
      File_Size = #{fileSize,jdbcType=INTEGER},
      File_Level = #{fileLevel,jdbcType=INTEGER},
      File_Icon = #{fileIcon,jdbcType=INTEGER},
      File_Icon_Custom = #{fileIconCustom,jdbcType=INTEGER},
      File_Comments = #{fileComments,jdbcType=INTEGER},
      File_Data = #{fileData,jdbcType=INTEGER}
    where File_Id = #{fileId,jdbcType=INTEGER}
  </update>
  <!-- 以下是我自己写的调用存储过程的映射 -->
  <select id="proc_File_Copy" statementType="CALLABLE" parameterType="java.util.Map" resultType="java.lang.Integer">
       {call File_Copy(#{F_Path,mode=IN,jdbcType=INTEGER},#{F_Source,mode=IN,jdbcType=INTEGER},#{F_CREATOR,mode=IN,jdbcType=INTEGER},#{NEW_ID,mode=OUT,jdbcType=INTEGER})}
  </select>
  <select id="proc_File_CreateFolder" statementType="CALLABLE" parameterType="java.util.Map"
          resultType="java.lang.Integer">
       {call File_CreateFolder(#{F_NAME,mode=IN,jdbcType=VARCHAR},#{F_CREATOR,mode=IN,jdbcType=INTEGER},#{F_Path,mode=IN,jdbcType=INTEGER},#{NEW_ID,mode=OUT,jdbcType=INTEGER})}
  </select>
  <select id="proc_File_Delete" statementType="CALLABLE" parameterType="java.util.Map">
       {call File_Delete(#{F_Id,mode=IN,jdbcType=INTEGER})}
  </select>
  <select id="proc_File_Dereference" statementType="CALLABLE" parameterType="java.util.Map"
          resultType="java.lang.Integer">
       {call File_Dereference(#{F_Id,mode=IN,jdbcType=INTEGER},#{F_Path,mode=IN,jdbcType=INTEGER})}
  </select>
  <select id="proc_File_Download" statementType="CALLABLE" parameterType="java.util.Map">  
       {call File_Download(#{F_ID,mode=IN,jdbcType=INTEGER},#{F_Content,mode=OUT,jdbcType=BLOB})}
  </select>
  <select id="proc_File_GetIcon" statementType="CALLABLE" parameterType="java.util.Map">  
       {call File_GetIcon(#{F_ID,mode=IN,jdbcType=INTEGER},#{F_Icon,mode=OUT,jdbcType=BLOB})}
  </select>
  <select id="proc_File_Move" statementType="CALLABLE" parameterType="java.util.Map">
       {call File_Move(#{F_MoveFrom,mode=IN,jdbcType=INTEGER},#{F_MoveTo,mode=IN,jdbcType=INTEGER},#{F_Source,mode=IN,jdbcType=INTEGER})}
  </select>
  <select id="proc_File_Overwrite" statementType="CALLABLE" parameterType="java.util.Map">  
       {call File_Overwrite(#{F_Id,mode=IN,jdbcType=VARCHAR},#{File_Data,mode=IN,jdbcType=BLOB})}
  </select>
  <select id="proc_File_Reference" statementType="CALLABLE" parameterType="java.util.Map">  
       {call File_Reference(#{F_Path,mode=IN,jdbcType=INTEGER},#{F_Source,mode=IN,jdbcType=INTEGER})}
  </select>
  <select id="proc_File_Rename" statementType="CALLABLE" parameterType="java.util.Map">  
       {call File_Rename(#{F_Id,mode=IN,jdbcType=INTEGER},#{F_NewName,mode=IN,jdbcType=VARCHAR})}
  </select>
  <select id="proc_File_SetIcon" statementType="CALLABLE" parameterType="java.util.Map">
       {call File_SetIcon(#{F_Id,mode=IN,jdbcType=INTEGER},#{F_Icon,mode=IN,jdbcType=INTEGER},#{F_Icon_Custom,mode=IN,jdbcType=BLOB})}
  </select>
  <select id="proc_File_Upload" statementType="CALLABLE" parameterType="java.util.Map" resultType="java.lang.Integer">
       {call File_Upload(#{F_Name,mode=IN,jdbcType=VARCHAR},#{F_Creator,mode=IN,jdbcType=INTEGER},#{F_Path,mode=IN,jdbcType=INTEGER},#{F_Content,mode=IN,jdbcType=BLOB},#{NEW_ID,mode=OUT,jdbcType=INTEGER})}
  </select>
</mapper>