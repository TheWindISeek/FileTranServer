<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.api.dao.CommentsMapper">
  <resultMap id="BaseResultMap" type="com.example.api.pojo.Comments">
    <id column="Comment_Id" jdbcType="INTEGER" property="commentId" />
    <result column="Comment_Type" jdbcType="INTEGER" property="commentType" />
    <result column="Comment_Creator" jdbcType="INTEGER" property="commentCreator" />
    <result column="Comment_Upd" jdbcType="TIMESTAMP" property="commentUpd" />
    <result column="Comment_Mod" jdbcType="TIMESTAMP" property="commentMod" />
    <result column="Comment_Parent" jdbcType="INTEGER" property="commentParent" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.api.pojo.Comments">
    <result column="Comment_Msg" jdbcType="LONGVARCHAR" property="commentMsg" />
  </resultMap>
  <sql id="Base_Column_List">
    Comment_Id, Comment_Type, Comment_Creator, Comment_Upd, Comment_Mod, Comment_Parent
  </sql>
  <sql id="Blob_Column_List">
    Comment_Msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Comments
    where Comment_Id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Comments
    where Comment_Id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.api.pojo.Comments">
    insert into Comments (Comment_Id, Comment_Type, Comment_Creator, 
      Comment_Upd, Comment_Mod, Comment_Parent, 
      Comment_Msg)
    values (#{commentId,jdbcType=INTEGER}, #{commentType,jdbcType=INTEGER}, #{commentCreator,jdbcType=INTEGER}, 
      #{commentUpd,jdbcType=TIMESTAMP}, #{commentMod,jdbcType=TIMESTAMP}, #{commentParent,jdbcType=INTEGER}, 
      #{commentMsg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.api.pojo.Comments">
    insert into Comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        Comment_Id,
      </if>
      <if test="commentType != null">
        Comment_Type,
      </if>
      <if test="commentCreator != null">
        Comment_Creator,
      </if>
      <if test="commentUpd != null">
        Comment_Upd,
      </if>
      <if test="commentMod != null">
        Comment_Mod,
      </if>
      <if test="commentParent != null">
        Comment_Parent,
      </if>
      <if test="commentMsg != null">
        Comment_Msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentType != null">
        #{commentType,jdbcType=INTEGER},
      </if>
      <if test="commentCreator != null">
        #{commentCreator,jdbcType=INTEGER},
      </if>
      <if test="commentUpd != null">
        #{commentUpd,jdbcType=TIMESTAMP},
      </if>
      <if test="commentMod != null">
        #{commentMod,jdbcType=TIMESTAMP},
      </if>
      <if test="commentParent != null">
        #{commentParent,jdbcType=INTEGER},
      </if>
      <if test="commentMsg != null">
        #{commentMsg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.api.pojo.Comments">
    update Comments
    <set>
      <if test="commentType != null">
        Comment_Type = #{commentType,jdbcType=INTEGER},
      </if>
      <if test="commentCreator != null">
        Comment_Creator = #{commentCreator,jdbcType=INTEGER},
      </if>
      <if test="commentUpd != null">
        Comment_Upd = #{commentUpd,jdbcType=TIMESTAMP},
      </if>
      <if test="commentMod != null">
        Comment_Mod = #{commentMod,jdbcType=TIMESTAMP},
      </if>
      <if test="commentParent != null">
        Comment_Parent = #{commentParent,jdbcType=INTEGER},
      </if>
      <if test="commentMsg != null">
        Comment_Msg = #{commentMsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Comment_Id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.api.pojo.Comments">
    update Comments
    set Comment_Type = #{commentType,jdbcType=INTEGER},
      Comment_Creator = #{commentCreator,jdbcType=INTEGER},
      Comment_Upd = #{commentUpd,jdbcType=TIMESTAMP},
      Comment_Mod = #{commentMod,jdbcType=TIMESTAMP},
      Comment_Parent = #{commentParent,jdbcType=INTEGER},
      Comment_Msg = #{commentMsg,jdbcType=LONGVARCHAR}
    where Comment_Id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.api.pojo.Comments">
    update Comments
    set Comment_Type = #{commentType,jdbcType=INTEGER},
      Comment_Creator = #{commentCreator,jdbcType=INTEGER},
      Comment_Upd = #{commentUpd,jdbcType=TIMESTAMP},
      Comment_Mod = #{commentMod,jdbcType=TIMESTAMP},
      Comment_Parent = #{commentParent,jdbcType=INTEGER}
    where Comment_Id = #{commentId,jdbcType=INTEGER}
  </update>
  <!-- 以下是我自己写的调用存储过程的映射 -->
  <select id="proc_Comment_Delete" statementType="CALLABLE" parameterType="java.util.Map">  
       {call Comment_Delete(#{C_ID,mode=IN,jdbcType=INTEGER})}
  </select>
  <select id="proc_Comment_Modify" statementType="CALLABLE" parameterType="java.util.Map">  
       {call Comment_Modify(#{C_Id,mode=IN,jdbcType=INTEGER},#{C_Msg,mode=IN,jdbcType=LONGVARCHAR})}
  </select>
  <select id="proc_Comment_Publish" statementType="CALLABLE" parameterType="java.util.Map"
          resultType="java.lang.Integer">
       {call Comment_Publish(#{C_Creator,mode=IN,jdbcType=INTEGER},#{C_Msg,mode=IN,jdbcType=LONGVARCHAR},#{C_Parent,mode=IN,jdbcType=INTEGER},#{NEW_ID,mode=OUT,jdbcType=INTEGER})}
  </select>
</mapper>